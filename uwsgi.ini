[uwsgi]

# 启动主进程，其它的uwsgi进程都是这个master进程的子进程，如果kill这个master进程，相当于重启所有的uwsgi进程。
master = true

log-format = %(addr) %(user) [%(ctime)] "%(method) %(uri) %(proto)" %(status) %(size) "%(referer)"
socket = 0.0.0.0:8000
chdir = /app/myblog

# 加载一个WSGI模块,这里加载wsgi.py这个模块
module = myblog.wsgi:application

# 设置在收到请求时，uWSGI加载的模块中哪个变量将被调用，默认是名字为“application”的变量。
callable = app
enable-threads = True
processes = 8
threads = 4

logto = /var/log/uwsgi.log
touch-logreopen = /var/log/.touchforlogrotate

# 内存泄露处理
reload-on-rss = 2048  # 每个worker物理内存超过1024M之后重启
max-requests = 1000  # 每个worker处理1000次请求之后重启
lazy-apps = true  #在每个worker而不是master中加载应用

# 一个请求花费的时间超过了这个harakiri超时时间，那么这个请求都会被丢弃，并且当前处理这个请求的工作进程会被回收再利用（即重启）
harakiri = 60